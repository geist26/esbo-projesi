{"ast":null,"code":"var _jsxFileName = \"/Users/onurkocamanoglu/Desktop/esbo/client/src/contexts/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Dosya: client/src/contexts/SocketContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\n// 1. Context'i oluşturuyoruz.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\n\n// 2. Diğer bileşenlerin bu context'e kolayca erişmesi için bir hook oluşturuyoruz.\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n\n// 3. Uygulamayı saran ve bağlantıyı yöneten ana bileşeni oluşturuyoruz.\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n\n  // Bu useEffect, uygulama ilk yüklendiğinde sadece bir kez çalışır.\n  useEffect(() => {\n    // Sunucumuzla yeni bir socket bağlantısı kuruyoruz.\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n\n    // Uygulama kapandığında veya bileşen kaldırıldığında bağlantıyı temizle.\n    // Bu, hafıza sızıntılarını önler.\n    return () => newSocket.close();\n  }, []); // Boş dependency array sayesinde sadece bir kez çalışır.\n\n  return (\n    /*#__PURE__*/\n    // Oluşturulan socket bağlantısını, altındaki tüm bileşenlerin kullanımına sunuyoruz.\n    _jsxDEV(SocketContext.Provider, {\n      value: socket,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s2(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","socket","setSocket","newSocket","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/onurkocamanoglu/Desktop/esbo/client/src/contexts/SocketContext.js"],"sourcesContent":["// Dosya: client/src/contexts/SocketContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\n// 1. Context'i oluşturuyoruz.\nconst SocketContext = createContext();\n\n// 2. Diğer bileşenlerin bu context'e kolayca erişmesi için bir hook oluşturuyoruz.\nexport const useSocket = () => {\n    return useContext(SocketContext);\n};\n\n// 3. Uygulamayı saran ve bağlantıyı yöneten ana bileşeni oluşturuyoruz.\nexport const SocketProvider = ({ children }) => {\n    const [socket, setSocket] = useState(null);\n\n    // Bu useEffect, uygulama ilk yüklendiğinde sadece bir kez çalışır.\n    useEffect(() => {\n        // Sunucumuzla yeni bir socket bağlantısı kuruyoruz.\n        const newSocket = io('http://localhost:5001');\n        setSocket(newSocket);\n\n        // Uygulama kapandığında veya bileşen kaldırıldığında bağlantıyı temizle.\n        // Bu, hafıza sızıntılarını önler.\n        return () => newSocket.close();\n    }, []); // Boş dependency array sayesinde sadece bir kez çalışır.\n\n    return (\n        // Oluşturulan socket bağlantısını, altındaki tüm bileşenlerin kullanımına sunuyoruz.\n        <SocketContext.Provider value={socket}>\n            {children}\n        </SocketContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;;AAED;AAAAE,EAAA,CAJaD,SAAS;AAKtB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,SAAS,GAAGX,EAAE,CAAC,uBAAuB,CAAC;IAC7CU,SAAS,CAACC,SAAS,CAAC;;IAEpB;IACA;IACA,OAAO,MAAMA,SAAS,CAACC,KAAK,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IACI;IACAV,OAAA,CAACC,aAAa,CAACU,QAAQ;MAACC,KAAK,EAAEL,MAAO;MAAAF,QAAA,EACjCA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;AAEjC,CAAC;AAACV,GAAA,CApBWF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}